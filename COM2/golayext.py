import streamlit as st
import komm
import numpy as np
import matplotlib.pyplot as plt

# Escreva um programa que simule a probabilidade de erro de bit de um sistema de comunica√ß√£o com as seguintes caracter√≠sticas:
# ‚Ä¢ Canal AWGN com Eb/ùëÅ0  variando de ‚àí2 a 6 dB.
# ‚Ä¢ Modula√ß√£o BPSK (simule em banda base).
# ‚Ä¢ C√≥digo de Golay estendido (24, 12), com decodifica√ß√£o hard de m√≠nima dist√¢ncia.
# Compare com o caso n√£o codificado.

rng = np.random.default_rng(seed=42)
komm.global_rng.set(rng)

st.title("Quest√£o 2: C√≥digo de Golay Estendido")

EbN0_dB_list = np.arange(-2, 7)  # Eb/N0 variando de  -2 a 6 dB.
EbN0 = 10**(EbN0_dB_list/10)

# awgn = komm.AWGNChannel(signal_power=1.0, snr=EbN0) # Canal AWGN com Eb/ùëÅ0  variando de ‚àí2 a 6 dB.
bpsk = komm.PSKConstellation(2) # Modula√ß√£o BPSK.
code = komm.GolayCode(True) # C√≥digo de Golay estendido (24, 12).
code = komm.BlockCode([[1]]) # C√≥digo sem codifica√ß√£o (n,n).
decoder = komm.ExhaustiveSearchDecoder(code) # Decodifica√ß√£o hard de m√≠nima dist√¢ncia.

source = komm.DiscreteMemorylessSource(2) # Padr√£o dos dados transmitidos

Eb = bpsk.mean_energy() / code.rate

print(Eb)
 
u = source.emit(10000) # Dados Transmitidos

v = code.encode(u) # Codifica√ß√£o Cod Golay

mod_v = bpsk.indices_to_symbols(v) # Modular BPSK

b = awgn.transmit(mod_v) # Transmiss√£o no canal

demod_b = bpsk.closest_indices(b) # Demodular BPSK

u_hat = decoder.decode(demod_b) # Decodifica√ß√£o Cod Golay

BER = np.mean(u != u_hat)

Pb = komm.gaussian_q(np.sqrt(2*EbN0))

cols = st.columns(2)

with cols[0]:
    # C√≥digo ap√≥s tranmiss√£o usando codifica√ß√£o Golay extendido
    pass
    
with cols[1]:
    # C√≥digo ap√≥s tranmiss√£o sem codifica√ß√£o
    pass
